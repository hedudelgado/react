{"version":3,"file":"main.773848dfbeed6e5a3acd.bundle.js","sources":["webpack:///./src/components/App/appActions.js"],"sourcesContent":["import { HeaderInterface, InvalidSessionErrorCodeMap, InvalidSessionHelper } from 'mega-code';\nimport {\n  getCountries,\n  getNewsletterRegions,\n  getNewsletterPreferences,\n  getProfile,\n  updateProfile,\n  deleteCustomer,\n} from '../../utils/api';\n\n// actions\nexport const USER_LOGGED_IN_SUCCESSFULLY = 'USER_LOGGED_IN_SUCCESSFULLY';\nexport const COUNTRIES_RECEIVED = 'COUNTRIES_RECEIVED';\nexport const PROFILE_RECEIVED = 'PROFILE_RECEIVED';\nexport const REGIONS_RECEIVED = 'REGIONS_RECEIVED';\nexport const NEWSLETTER_RECEIVED = 'NEWSLETTER_RECEIVED';\nexport const SET_EDIT_VIEW = 'SET_EDIT_VIEW';\nexport const SET_NOTIFICATION_MESSAGE = 'SET_NOTIFICATION_MESSAGE';\nexport const PROFILE_UPDATED = 'PROFILE_UPDATED';\nexport const NEWSLETTER_UPDATED = 'NEWSLETTER_UPDATED';\nexport const RESET_NEWSLETTER_INFO = 'RESET_NEWSLETTER_INFO';\nexport const RESET_USER_INFO = 'RESET_USER_INFO';\n// views\nexport const DEFAULT_VIEW = undefined;\nexport const USER_DETAILS_VIEW = 'USER_DETAILS_VIEW';\nexport const PASSWORD_VIEW = 'PASSWORD_VIEW';\nexport const PAYMENT_CARD_VIEW = 'PAYMENT_CARD_VIEW';\nexport const ADD_GUEST_VIEW = 'ADD_GUEST_VIEW';\nexport const REGULAR_GUESTS_VIEW = 'REGULAR_GUESTS_VIEW';\nexport const NEWSLETTER_VIEW = 'NEWSLETTER_VIEW';\nexport const ROOM_REQUIREMENTS_VIEW = 'ROOM_REQUIREMENTS_VIEW';\nexport const EXTRAS_PREFERENCES_VIEW = 'EXTRAS_PREFERENCES_VIEW';\nexport const MEMORABLE_WORD_VIEW = 'MEMORABLE_WORD_VIEW';\n// errors\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const PASSWORD_ERROR = 'PASSWORD_ERROR';\nexport const NEWSLETTER_ERROR = 'NEWSLETTER_ERROR';\nexport const PAYMENT_CARD_ERROR = 'PAYMENT_CARD_ERROR';\nexport const USER_DETAILS_ERROR = 'USER_DETAILS_ERROR';\nexport const REGULAR_GUESTS_ERROR = 'REGULAR_GUESTS_ERROR';\nexport const MEMORABLE_WORD_ERROR = 'MEMORABLE_WORD_ERROR';\nexport const ROOM_REQUIREMENTS_ERROR = 'ROOM_REQUIREMENTS_ERROR';\nexport const EXTRAS_PREFERENCES_ERROR = 'EXTRAS_PREFERENCES_ERROR';\n\nconst checkForInvalidSession = (error, config, dispatch) => {\n  if (InvalidSessionHelper\n    .isSessionExpired(error, config)) {\n    dispatch({\n      type: RESET_USER_INFO,\n    });\n    dispatch({\n      type: RESET_NEWSLETTER_INFO,\n    });\n    HeaderInterface.userLogOut(HeaderInterface.LOG_OUT_REASONS.SESSION_EXPIRED);\n  }\n};\n\nexport const getSettings = (email, sessionId, business) => (dispatch, getState) => {\n  getProfile(email, sessionId, business).then((profile) => {\n    dispatch({\n      type: PROFILE_RECEIVED,\n      profile,\n    });\n  }).catch((error) => {\n    checkForInvalidSession(error, InvalidSessionErrorCodeMap.ACCOUNT.invalidSession, dispatch);\n    dispatch({\n      type: PROFILE_ERROR,\n      error,\n    });\n  });\n  getCountries()\n    .then((countries) => {\n      dispatch({\n        type: COUNTRIES_RECEIVED,\n        countries,\n      });\n    });\n  if (getState().application.showEmailPreferences) {\n    getNewsletterRegions()\n      .then((regions) => {\n        dispatch({\n          type: REGIONS_RECEIVED,\n          regions,\n        });\n      });\n\n    getNewsletterPreferences(email)\n      .then((newsletter) => {\n        dispatch({\n          type: NEWSLETTER_RECEIVED,\n          newsletter,\n        });\n      })\n      .catch(e => dispatch({\n        type: NEWSLETTER_ERROR,\n        error: e,\n      }));\n  }\n};\n\nexport const updateUserProfile = payload => dispatch => updateProfile(payload).catch((error) => {\n  checkForInvalidSession(error, InvalidSessionErrorCodeMap.ACCOUNT.invalidSession, dispatch);\n  return Promise.reject(error);\n});\n\nexport const deleteUserProfile = payload => dispatch => deleteCustomer(payload).catch((error) => {\n  checkForInvalidSession(error, InvalidSessionErrorCodeMap.DELETE_PROFILE.invalidSession, dispatch);\n  return Promise.reject(error);\n});\n\nexport default {\n  getSettings,\n};\n"],"mappings":"AAAA","sourceRoot":""}