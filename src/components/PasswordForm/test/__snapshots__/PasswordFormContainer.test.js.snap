// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordFormContainer Component Renders PasswordFormContainer Element should match snapshot 1`] = `
<ContextProvider
  value={
    Object {
      "dirty": false,
      "errors": Object {},
      "handleBlur": [Function],
      "handleChange": [Function],
      "handleReset": [Function],
      "handleSubmit": [Function],
      "initialValues": Object {
        "confirmPassword": "",
        "currentPassword": "",
        "newPassword": "",
      },
      "isSubmitting": false,
      "isValid": false,
      "isValidating": false,
      "registerField": [Function],
      "resetForm": [Function],
      "setError": [Function],
      "setErrors": [Function],
      "setFieldError": [Function],
      "setFieldTouched": [Function],
      "setFieldValue": [Function],
      "setFormikState": [Function],
      "setStatus": [Function],
      "setSubmitting": [Function],
      "setTouched": [Function],
      "setValues": [Function],
      "status": undefined,
      "submitCount": 0,
      "submitForm": [Function],
      "touched": Object {},
      "unregisterField": [Function],
      "validate": [Function],
      "validateField": [Function],
      "validateForm": [Function],
      "validateOnBlur": true,
      "validateOnChange": true,
      "validationSchema": undefined,
      "values": Object {
        "confirmPassword": "",
        "currentPassword": "",
        "newPassword": "",
      },
    }
  }
>
  <PasswordForm
    data-test="password-form"
    dictionary={
      Object {
        "password.button.cancel": "Cancel",
        "password.button.update": "Update",
      }
    }
    dirty={false}
    errors={Object {}}
    handleBlur={[Function]}
    handleChange={[Function]}
    handleReset={[Function]}
    handleSubmit={[Function]}
    initialValues={
      Object {
        "confirmPassword": "",
        "currentPassword": "",
        "newPassword": "",
      }
    }
    isSubmitting={false}
    isValid={false}
    isValidating={false}
    registerField={[Function]}
    resetForm={[Function]}
    setEditView={[MockFunction]}
    setError={[Function]}
    setErrors={[Function]}
    setFieldError={[Function]}
    setFieldTouched={[Function]}
    setFieldValue={[Function]}
    setFormikState={[Function]}
    setStatus={[Function]}
    setSubmitting={[Function]}
    setTouched={[Function]}
    setValues={[Function]}
    submitCount={0}
    submitForm={[Function]}
    touched={Object {}}
    unregisterField={[Function]}
    validateField={[Function]}
    validateForm={[Function]}
    validateOnBlur={true}
    validateOnChange={true}
    values={
      Object {
        "confirmPassword": "",
        "currentPassword": "",
        "newPassword": "",
      }
    }
  />
</ContextProvider>
`;
